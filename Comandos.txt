Comandos
npx @react-native-community/cli@latest init
npm run Android
npm install --save react-native-webview

// watermelondb
npm install @nozbe/watermelondb
npm install -D @babel/plugin-proposal-decorators

// thermal-printer
npm install react-native-thermal-printer

//Camara
npm install react-native-vision-camera

//Tailwind React Native Classnames
npm install twrnc

//Geolocalizacion
npm install @react-native-community/geolocation --save



//Comandos para crear APK
npx react-native bundle --platform android --dev false --entry-file index.js --bundle-output android/app/src/main/assets/index.android.bundle --assets-dest android/app/src/main/res

cd android

./gradlew assembleDebug

//Ruta APK
project/android/app/build/outputs/apk/debug/app-debug.apk

//Error ts
npm install --save-dev typescript @react-native/typescript-config


//Notificaciones
 npm install @react-native-firebase/messaging
 npm install @react-native-firebase/app
 npm install @notifee/react-native

















































     <TouchableOpacity 
      style={styles.button} 
      onPress={onPress}
      >
      <Text>Permisos de camara</Text>
    </TouchableOpacity>
      const data = await getLocalConfiguration()
     const permisos = await permisosCamara()
     
      if (permisos === PermissionsAndroid.RESULTS.NEVER_ASK_AGAIN) {
        Alert.alert(
          "Permiso requerido",
          "Debes habilitar la cÃ¡mara manualmente en ajustes.",
          [
            { text: "Cancelar", style: "cancel" },
            { text: "Abrir ajustes", onPress: () => Linking.openSettings() }
          ]
        );
      }




,

  "plugins": [
    ["@babel/plugin-proposal-decorators", { "legacy": true }],
    ["@babel/plugin-proposal-class-properties", { "loose": true }],
    [
      "@babel/plugin-transform-runtime",
      {
        "helpers": true,
        "regenerator": true
      }
    ]
  ]
